name: Check dependencies


on:
  push:
    branches:
      - master
  pull_request:
    types:
      - closed
      - opened
      - synchronize
    branches:
      - master


jobs:
  build:
    strategy:
      matrix:
        os: [
          macos-latest,
          windows-latest,
          ubuntu-latest
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
            python-version: 3.9

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies for Windows
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install torch torchvision torchaudio
          pip install torch_geometric
          pip install torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.1.0+cpu.html

      - name: Install dependencies for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          pip install torch_geometric
          pip install pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.1.0+cpu.html

      - name: Install dependencies for MacOS
        if: matrix.os == 'macos-latest'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install torch torchvision torchaudio torchtext
          pip install torch_geometric
          pip install pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.1.0+cpu.html

      - name: Show dependencies
        run: pip list

      - name: Set PYTHONPATH
        if: matrix.os != 'windows-latest'
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Set PYTHONPATH for windows
        if: matrix.os == 'windows-latest'
        run: echo "PYTHONPATH=$env:PYTHONPATH;$PWD.Path" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Show PYTHONPATH
        if: matrix.os != 'windows-latest'
        run: echo $PYTHONPATH

      - name: Show PYTHONPATH for windows
        if: matrix.os == 'windows-latest'
        run: echo $env:PYTHONPATH

      - name: Run get_data.py
        run: python src/get_data.py

      - name: Run get_intermediate.py
        run: python src/get_intermediate.py

      - name: Run evaluate.py (without-feature, recall)
        run: python benchmark/evaluate.py -mt without-feature -mc recall

      - name: Run evaluate.py (without-feature, precision)
        run: python benchmark/evaluate.py -mt without-feature -mc precision

      - name: Run evaluate.py (with-feature, recall)
        run: python benchmark/evaluate.py -mt with-feature -mc recall

      - name: Run evaluate.py (with-feature, precision)
        run: python benchmark/evaluate.py -mt with-feature -mc precision
